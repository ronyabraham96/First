print('Hello')
n <- c(1:20)
p <- integrate((x^n)*(e^x),0,1)
?integrate
pwd
setwd("C:/Users/ronma/Desktop/SCW/SCW/Lesson4_ProgrammingR")
gapminder <- read.table("gapminder.txt", header = TRUE)
fahrenheit_to_celsius <- function(temp){
celsius <- (temp-32)*5/9
return(celsius)
}
fahrenheit_to_celsius(32)
fahrenheit_to_celsius(100)
celsius_to_kelvin <- function(temp_C){
kelvin <- 273+celsius
return(kelvin)
}
celsius_to_kelvin(23)
celsius_to_kelvin <- function(temp_C){
kelvin <- 273+temp_C
return(kelvin)
}
celsius_to_kelvin(23)
celsius_to_kelvin(27)
celsius_to_kelvin(temp_C = 27.55)
fahrenheit_to_kelvin <- function(temp_F){
celsius <- fahrenheit_to_celsius(temp_F)
kelvin <- celsius_to_kelvin(celsius)
return(kelvin)
}
fahrenheit_to_kelvin(100)
continent <- gapminder[gapminder$continent == cont, ]
c <- gapminder[gapminder$continent == 'Europe', ]
head(c)
MeanlifeExp <- function(cont){
continent <- gapminder[gapminder$continent == cont, ]
lifeExp <- continent[,4]
m <- mean(lifeExp)
return(m)
}
MeanlifeExp("Europe")
MeanlifeExp(Europe)
MeanlifeExp <- function(cont){
continent <- gapminder[gapminder$continent == cont, "lifeExp"]
m <- mean(continent)
return(m)
}
MeanlifeExp("Europe")
MeanlifeExp <- function(cont){
continent <- gapminder[gapminder$continent == cont, "lifeExp"]
m <- mean(continent)
return(m)
}
unique(gapminder$continent)
category <- unique(gapminder$continent)
category
help(for)
help(print)
category <- unique(gapminder$continent)
for (i in c(1:length(category))) {
if(MeanlifeExp(i)>50)
print(i + "has mean life expectency greater than 50")
else
print(i + "has mean life expectency greater than 50")
}
for (i in c(1:length(category))) {
if(MeanlifeExp(i)>50)
print(i + "has mean life expectency greater than 50")
else
print(i + "has mean life expectency greater than 50")
}
for (i in c(1:length(category))) {
if(MeanlifeExp(i)>50)
print("has mean life expectency greater than 50")
else
print("has mean life expectency less than 50")
}
i
for (i in c(1:length(category))) {
if(MeanlifeExp(category(i)>50))
print("has mean life expectency greater than 50")
else
print("has mean life expectency less than 50")
}
for (i in c(1:length(category))) {
if(MeanlifeExp(category[i]>50))
print("has mean life expectency greater than 50")
else
print("has mean life expectency less than 50")
}
category[1,1]
category[1]
for (i in c(1:length(category))) {
if(MeanlifeExp(category[i]>50))
print("has mean life expectency greater than 50")
else
print("has mean life expectency less than 50")
}
category[1]
for (i in category) {
if(MeanlifeExp(i)>50)
print("has mean life expectency greater than 50")
else
print("has mean life expectency less than 50")
}
for (i in category){
if(MeanlifeExp(i)>50)
print(paste0(i," has mean life expectency greater than 50"))
else
print("has mean life expectency less than 50")
}
for (i in category){
if(MeanlifeExp(i)>50)
print(paste0(i," has mean life expectency greater than 50"))
else
print(paste0(i,"has mean life expectency less than 50"))
}
for (i in category){
if(MeanlifeExp(i)>50)
print(paste0(i," has mean life expectency greater than 50"))
else
print(paste0(i," has mean life expectency less than 50"))
}
MeanlifeExp("Asia")
MeanlifeExp("Africa")
install.packages("ggplot2")
install.packages("rmarkdown")
install.packages("knitr")
setwd("C:/Users/ronma/Desktop/SCW/SCW/Lesson5_DataVisualizationR")
library(ggplot2)
gapminder <-read.table("gapminder.txt", header = TRUE)
head(gapminder)
ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp)) + geom_point()
ggplot(data = gapminder, aes(x = year, y = lifeExp)) + geom_point()
ggplot(data = gapminder, aes(x = year, y = lifeExp, color = continent)) + geom_point()
ggplot(data = gapminder, aes(x = year, y = lifeExp, color = continent)) + geom_line()
ggplot(data = gapminder, aes(x = year, y = lifeExp, by country,color = continent)) + geom_line()
ggplot(data = gapminder, aes(x = year, y = lifeExp, by = country,color = continent)) + geom_line()
ggplot(data = gapminder, aes(x = year, y = lifeExp, by = country,color = continent)) +
geom_line() +
geom_point()
ggplot(data = gapminder, aes(x = year, y = lifeExp, by = country)) +
geom_line(aes(color = continent)) +
geom_point()
ggplot(data = gapminder, aes(x = year, y = lifeExp, by = country)) +
geom_line(color = continent) +
geom_point()
ggplot(data = gapminder, aes(x = year, y = lifeExp, by = country)) +
geom_line(color = 'blue') +
geom_point()
ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp)) +
geom_point(alpha = 0.5)
ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp)) +
geom_point(alpha = 0.5) +
scale_x_log10()
ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp)) +
geom_point(alpha = 0.5) +
scale_x_log10() +
geom_smooth(method = 'lm')
ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp)) +
geom_point(alpha = 0.5) +
scale_x_log10() +
geom_smooth(method = 'qm')
ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp)) +
geom_point(alpha = 0.5, color = 'red') +
scale_x_log10() +
geom_smooth(method = 'lm')
ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp)) +
geom_point(alpha = 3.5, color = 'red') +
scale_x_log10() +
geom_smooth(method = 'lm')
ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp)) +
geom_point(alpha = 0.5, color = 'red') +
scale_x_log10() +
geom_smooth(method = 'lm')
ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp)) +
geom_point(size = 0.5, color = 'red') +
scale_x_log10() +
geom_smooth(method = 'lm')
ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp)) +
geom_point(size = 2.5, color = 'red') +
scale_x_log10() +
geom_smooth(method = 'lm')
ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp)) +
geom_point(size = 1.5, color = 'red') +
scale_x_log10() +
geom_smooth(method = 'lm')
ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp)) +
geom_point(size = 1.5, color = 'red') +
scale_x_log10() +
geom_smooth(method = 'lm')
ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp)) +
geom_point(size = 0.5, color = 'red') +
scale_x_log10() +
geom_smooth(method = 'lm')
ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp, color = 'red')) +
geom_point(size = 0.5, shape = 17) +
scale_x_log10() +
geom_smooth(method = 'lm', by = continent)
ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp, color = continent)) +
geom_point(size = 0.5, shape = 17) +
scale_x_log10() +
geom_smooth(method = 'lm')
ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp, color = continent)) +
geom_point(size = 3.5, shape = 17) +
scale_x_log10() +
geom_smooth(method = 'lm')
az_row <- startsWith(as.vector(gapminder$country), c('A','Z'))
az_countries <- gapminder[az_rows, ]
az_countries <- gapminder[az_row, ]
View(az_countries)
View(az_countries)
ggplot(data = az_countries, aes(x = year, y = lifeExp, color=continent)) +
geom_line() + facet_wrap( ~ country) +
labs(
x = "Year",              # x axis title
y = "Life expectancy",   # y axis title
title = "Figure 1",      # main title of figure
color = "Continent"      # title of legend
) +
theme(axis.text.x=element_text(angle=45), axis.ticks.x=element_blank())
lifeExpplot <- ggplot(data = az_countries, aes(x = year, y = lifeExp, color=continent)) +
geom_line() + facet_wrap( ~ country) +
labs(
x = "Year",              # x axis title
y = "Life expectancy",   # y axis title
title = "Figure 1",      # main title of figure
color = "Continent"      # title of legend
) +
theme(axis.text.x=element_text(angle=45), axis.ticks.x=element_blank())
ggsave(filename = "lifeExp.png", plot = lifeExpplot, width = 12, height = 10, dpi = 300, units = "cm")
ggsave("myPlot.pdf")
View(gapminder)
View(gapminder)
ggplot(data = Canlifeexp, aes(x = year, y = lifeExp, color = continent)) +
geom_bar()
Canlifeexp = gapminder[gapminder$country == 'Canada', ]
View(Canlifeexp)
View(Canlifeexp)
ggplot(data = Canlifeexp, aes(x = year, y = lifeExp, color = continent)) +
geom_bar()
ggplot(data = Canlifeexp, aes(x = year, y = lifeExp)) +
geom_bar()
ggplot(data = Canlifeexp, aes(x = year, y = lifeExp)) +
geom_col()
erow <- startsWith(as.vector(gapminder$country), 'E')
popsize <-  gapminder[erow, ]
head(popsize)
ggplot(data = popsize, aes(x = year, y = pop)) +
geom_col() + facet_wrap( ~ country) +
labs(
x = "Year",              # x axis title
y = "Population",   # y axis title
title = "Figure 1",      # main title of figure
color = "country"      # title of legend
)
ggplot(data = popsize, aes(x = year, y = pop)) +
geom_bar(stat = 'identity') + facet_wrap( ~ country) +
labs(
x = "Year",              # x axis title
y = "Population",   # y axis title
title = "Figure 1",      # main title of figure
color = "country"      # title of legend
)
ggplot(data = popsize, aes(x = year, y = pop/1000000)) +
geom_bar(stat = 'identity') + facet_wrap( ~ country) +
labs(
x = "Year",              # x axis title
y = "Population (in millions)",   # y axis title
title = "Figure 1",      # main title of figure
color = "country"      # title of legend
)
ggsave(filename = "PopofEcountries.png", plot = lifeExpplot, width = 12, height = 10, dpi = 300, units = "cm")
ggsave(filename = "PopofEcountries.png", plot = ecountplot, width = 12, height = 10, dpi = 300, units = "cm")
erow <- startsWith(as.vector(gapminder$country), 'E')
popsize <-  gapminder[erow, ]
ecountplot <- ggplot(data = popsize, aes(x = year, y = pop/1000000)) +
geom_bar(stat = 'identity') + facet_wrap( ~ country) +
labs(
x = "Year",              # x axis title
y = "Population (in millions)",   # y axis title
title = "Figure 1",      # main title of figure
color = "country"      # title of legend
)
ggsave(filename = "PopofEcountries.png", plot = ecountplot, width = 12, height = 10, dpi = 300, units = "cm")
ggsave(filename = "PopofEcountries.png", plot = ecountplot, width = 12, height = 10, dpi = 300, units = "cm")
ecountplot <- ggplot(data = popsize, aes(x = year, y = pop/1000000)) +
geom_bar(stat = 'identity') + facet_wrap( ~ country) +
labs(
x = "Year",              # x axis title
y = "Population (in millions)",   # y axis title
title = "Figure 1",      # main title of figure
fill = "country"      # title of legend
)
ggsave(filename = "PopofEcountries.png", plot = ecountplot, width = 12, height = 10, dpi = 300, units = "cm")
ecountplot <- ggplot(data = popsize, aes(x = year, y = pop/1000000)) +
geom_bar(stat = 'identity') + facet_wrap( ~ country) +
labs(
x = "Year",              # x axis title
y = "Population (in millions)",   # y axis title
title = "Figure 1",      # main title of figure
color = "country"      # title of legend
)
ecountplot <- ggplot(data = popsize, aes(x = year, y = pop/1000000)) +
geom_bar(stat = 'identity') + facet_wrap( ~ country) +
labs(
x = "Year",              # x axis title
y = "Population (in millions)",   # y axis title
title = "Figure 1",      # main title of figure
color = "Continent"      # title of legend
)
ggsave(filename = "PopofEcountries.png", plot = ecountplot, width = 12, height = 10, dpi = 300, units = "cm")
setwd("C:/Users/ronma/Desktop/SCW/SCW/Lesson6_ReproducibleResearchR")
